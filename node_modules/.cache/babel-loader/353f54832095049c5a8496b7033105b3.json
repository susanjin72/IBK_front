{"ast":null,"code":"import React from 'react';\nimport { useObserver } from 'mobx-react-lite';\nimport { storeContext } from './context';\nexport var useStoreData = function useStoreData(context, storeSelector, dataSelector) {\n  var value = React.useContext(context);\n\n  if (!value) {\n    throw new Error();\n  }\n\n  var store = storeSelector(value);\n  return useObserver(function () {\n    return dataSelector(store);\n  });\n};\nexport var useRootData = function useRootData(dataSelector) {\n  return useStoreData(storeContext, function (contextData) {\n    return contextData;\n  }, dataSelector);\n};","map":{"version":3,"sources":["C:/Users/kidpi/front-workspace/ibk-front/src/hooks.ts"],"names":["React","useObserver","storeContext","useStoreData","context","storeSelector","dataSelector","value","useContext","Error","store","useRootData","contextData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,iBAA1B;AACA,SAAQC,YAAR,QAA2B,WAA3B;AAIA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CACxBC,OADwB,EAExBC,aAFwB,EAGxBC,YAHwB,EAIvB;AACD,MAAMC,KAAK,GAAGP,KAAK,CAACQ,UAAN,CAAiBJ,OAAjB,CAAd;;AACA,MAAG,CAACG,KAAJ,EAAW;AACP,UAAM,IAAIE,KAAJ,EAAN;AACH;;AACD,MAAMC,KAAK,GAAGL,aAAa,CAACE,KAAD,CAA3B;AACA,SAAON,WAAW,CAAC,YAAM;AACrB,WAAOK,YAAY,CAACI,KAAD,CAAnB;AACH,GAFiB,CAAlB;AAGH,CAbM;AAeP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CACvBL,YADuB;AAAA,SAEtBH,YAAY,CAACD,YAAD,EAAe,UAAAU,WAAW;AAAA,WAAIA,WAAJ;AAAA,GAA1B,EAA4CN,YAA5C,CAFU;AAAA,CAApB","sourcesContent":["import React from 'react';\r\nimport {useObserver} from 'mobx-react-lite';\r\nimport {storeContext} from './context';\r\nimport {TStore} from './stores/store';\r\n\r\n\r\nexport const useStoreData = <Selection, ContextData, Store>(\r\n    context: React.Context<ContextData>,\r\n    storeSelector: (ContextData: ContextData) => Store,\r\n    dataSelector: (store: Store) => Selection\r\n) => {\r\n    const value = React.useContext(context);\r\n    if(!value) {\r\n        throw new Error();\r\n    }\r\n    const store = storeSelector(value);\r\n    return useObserver(() => {\r\n        return dataSelector(store)\r\n    });\r\n}\r\n\r\nexport const useRootData = <Selection>(\r\n    dataSelector: (store: TStore) => Selection\r\n) => useStoreData(storeContext, contextData => contextData!, dataSelector)"]},"metadata":{},"sourceType":"module"}