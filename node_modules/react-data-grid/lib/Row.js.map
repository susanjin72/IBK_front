{"version":3,"file":"Row.js","sourceRoot":"","sources":["../src/Row.tsx"],"names":[],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nimport Cell from './Cell';\nimport { IRowRendererProps } from './common/types';\nimport { isFrozen } from './utils/columnUtils';\n\nexport default class Row<R> extends React.Component<IRowRendererProps<R>> {\n  static displayName = 'Row';\n\n  static defaultProps = {\n    cellRenderer: Cell\n  };\n\n  handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    // Prevent default to allow drop\n    e.preventDefault();\n    const { idx, cellMetaData } = this.props;\n    cellMetaData.onDragEnter(idx);\n  };\n\n  handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'copy';\n  };\n\n  handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    // The default in Firefox is to treat data in dataTransfer as a URL and perform navigation on it, even if the data type used is 'text'\n    // To bypass this, we need to capture and prevent the drop event.\n    e.preventDefault();\n  };\n\n  getCells() {\n    const {\n      cellMetaData,\n      colOverscanEndIdx,\n      colOverscanStartIdx,\n      columns,\n      idx,\n      isRowSelected,\n      lastFrozenColumnIndex,\n      onRowSelectionChange,\n      row,\n      scrollLeft,\n      isSummaryRow\n    } = this.props;\n    const Renderer = this.props.cellRenderer!;\n    const cellElements = [];\n\n    for (let colIdx = 0; colIdx <= colOverscanEndIdx; colIdx++) {\n      const column = columns[colIdx];\n      const colIsFrozen = isFrozen(column);\n\n      if (colIdx < colOverscanStartIdx && !colIsFrozen) continue;\n\n      const { key } = column;\n\n      cellElements.push(\n        <Renderer\n          key={key as string} // FIXME: fix key type\n          idx={colIdx}\n          rowIdx={idx}\n          column={column}\n          lastFrozenColumnIndex={lastFrozenColumnIndex}\n          cellMetaData={cellMetaData}\n          rowData={row}\n          expandableOptions={this.getExpandableOptions(key)}\n          scrollLeft={colIsFrozen && typeof scrollLeft === 'number' ? scrollLeft : undefined}\n          isRowSelected={isRowSelected}\n          onRowSelectionChange={onRowSelectionChange}\n          isSummaryRow={isSummaryRow}\n        />\n      );\n    }\n\n    return cellElements;\n  }\n\n  getExpandableOptions(columnKey: keyof R) {\n    const { subRowDetails } = this.props;\n    if (!subRowDetails) return;\n\n    const { field, expanded, children, treeDepth } = subRowDetails;\n    return {\n      canExpand: field === columnKey && ((children && children.length > 0) || subRowDetails.group === true),\n      field,\n      expanded,\n      children,\n      treeDepth,\n      subRowDetails\n    };\n  }\n\n  render() {\n    const { idx, isRowSelected, extraClasses, isSummaryRow } = this.props;\n    const className = classNames(\n      'rdg-row',\n      `rdg-row-${idx % 2 === 0 ? 'even' : 'odd'}`,\n      { 'rdg-row-selected': isRowSelected },\n      extraClasses\n    );\n\n    const events = !isSummaryRow && {\n      onDragEnter: this.handleDragEnter,\n      onDragOver: this.handleDragOver,\n      onDrop: this.handleDrop\n    };\n\n    return (\n      <div\n        className={className}\n        style={{ width: this.props.width, height: this.props.height }}\n        {...events}\n      >\n        {this.getCells()}\n      </div>\n    );\n  }\n}\n"]}