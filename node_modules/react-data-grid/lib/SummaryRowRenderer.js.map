{"version":3,"file":"SummaryRowRenderer.js","sourceRoot":"","sources":["../src/SummaryRowRenderer.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,OAAO,CAAC;AAEpC,OAAO,GAAG,MAAM,OAAO,CAAC;AAExB,OAAO,EAAE,gBAAgB,EAAE,MAAM,SAAS,CAAC;AAE3C,IAAM,IAAI,GAAG,cAAO,CAAC,CAAC;AAatB,SAAS,WAAW,CAAuB,EASX;QAR9B,8BAAY,EACZ,wCAAiB,EACjB,4CAAmB,EACnB,gCAAa,EACb,YAAG,EACH,oBAAO,EACP,wBAAS,EACT,0BAAU;IAEV,OAAO,CACL,oBAAC,GAAG,IACF,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,OAAO,EACZ,KAAK,EAAE,aAAa,CAAC,gBAAgB,GAAG,gBAAgB,EAAE,EAC1D,MAAM,EAAE,SAAS,EACjB,OAAO,EAAE,aAAa,CAAC,OAAO,EAC9B,aAAa,EAAE,KAAK,EACpB,oBAAoB,EAAE,IAAI,EAC1B,YAAY,EAAE,YAAY,EAC1B,mBAAmB,EAAE,mBAAmB,EACxC,iBAAiB,EAAE,iBAAiB,EACpC,qBAAqB,EAAE,aAAa,CAAC,qBAAqB,EAC1D,UAAU,EAAE,UAAU,EACtB,YAAY,SACZ,CACH,CAAC;AACJ,CAAC;AAED,eAAe,IAAI,CAAC,WAAW,CAAgF,CAAC","sourcesContent":["import React, { memo } from 'react';\n\nimport Row from './Row';\nimport { RowRendererProps } from './RowRenderer';\nimport { getScrollbarSize } from './utils';\n\nconst noop = () => {};\n\ntype SummaryRowRendererProps<R, K extends keyof R> = Pick<RowRendererProps<R, K>,\n| 'idx'\n| 'rowData'\n| 'columnMetrics'\n| 'cellMetaData'\n| 'colOverscanEndIdx'\n| 'colOverscanStartIdx'\n| 'rowHeight'\n| 'scrollLeft'\n>;\n\nfunction RowRenderer<R, K extends keyof R>({\n  cellMetaData,\n  colOverscanEndIdx,\n  colOverscanStartIdx,\n  columnMetrics,\n  idx,\n  rowData,\n  rowHeight,\n  scrollLeft\n}: SummaryRowRendererProps<R, K>) {\n  return (\n    <Row<R>\n      idx={idx}\n      row={rowData}\n      width={columnMetrics.totalColumnWidth + getScrollbarSize()}\n      height={rowHeight}\n      columns={columnMetrics.columns}\n      isRowSelected={false}\n      onRowSelectionChange={noop}\n      cellMetaData={cellMetaData}\n      colOverscanStartIdx={colOverscanStartIdx}\n      colOverscanEndIdx={colOverscanEndIdx}\n      lastFrozenColumnIndex={columnMetrics.lastFrozenColumnIndex}\n      scrollLeft={scrollLeft}\n      isSummaryRow\n    />\n  );\n}\n\nexport default memo(RowRenderer) as <R, K extends keyof R>(props: SummaryRowRendererProps<R, K>) => JSX.Element;\n"]}