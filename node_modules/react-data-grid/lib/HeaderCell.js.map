{"version":3,"file":"HeaderCell.js","sourceRoot":"","sources":["../src/HeaderCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { isElement } from 'react-is';\nimport { isFrozen } from './utils/columnUtils';\nimport { HeaderRowType } from './common/enums';\nimport { CalculatedColumn, HeaderRowProps } from './common/types';\n\nfunction SimpleCellRenderer<R>({ column, rowType }: HeaderRowProps<R>) {\n  const headerText = rowType === HeaderRowType.HEADER ? column.name : '';\n  return <>{headerText}</>;\n}\n\nexport interface HeaderCellProps<R> {\n  renderer?: React.ReactElement | React.ComponentType<HeaderRowProps<R>>;\n  column: CalculatedColumn<R>;\n  lastFrozenColumnIndex: number;\n  rowType: HeaderRowType;\n  height: number;\n  onResize(column: CalculatedColumn<R>, width: number): void;\n  onHeaderDrop?(): void;\n  allRowsSelected: boolean;\n  onAllRowsSelectionChange(checked: boolean): void;\n  draggableHeaderCell?: React.ComponentType<{ column: CalculatedColumn<R>; onHeaderDrop(): void }>;\n  className?: string;\n}\n\nexport default class HeaderCell<R> extends React.Component<HeaderCellProps<R>> {\n  private readonly cell = React.createRef<HTMLDivElement>();\n\n  private onMouseDown = (event: React.MouseEvent) => {\n    if (event.button !== 0) {\n      return;\n    }\n\n    const { right } = event.currentTarget.getBoundingClientRect();\n    const offset = right - event.clientX;\n\n    if (offset > 11) { // +1px to account for the border size\n      return;\n    }\n\n    const onMouseMove = (event: MouseEvent) => {\n      this.onResize(event.clientX + offset);\n    };\n\n    const onMouseUp = () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    event.preventDefault();\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n  };\n\n  private onTouchStart = (event: React.TouchEvent) => {\n    const touch = event.changedTouches[0];\n    const { identifier } = touch;\n    const { right } = event.currentTarget.getBoundingClientRect();\n    const offset = right - touch.clientX;\n\n    if (offset > 11) { // +1px to account for the border size\n      return;\n    }\n\n    function getTouch(event: TouchEvent) {\n      for (const touch of event.changedTouches) {\n        if (touch.identifier === identifier) return touch;\n      }\n      return null;\n    }\n\n    const onTouchMove = (event: TouchEvent) => {\n      const touch = getTouch(event);\n      if (touch) {\n        this.onResize(touch.clientX + offset);\n      }\n    };\n\n    const onTouchEnd = (event: TouchEvent) => {\n      const touch = getTouch(event);\n      if (!touch) return;\n      window.removeEventListener('touchmove', onTouchMove);\n      window.removeEventListener('touchend', onTouchEnd);\n    };\n\n    window.addEventListener('touchmove', onTouchMove);\n    window.addEventListener('touchend', onTouchEnd);\n  };\n\n  private onResize(x: number) {\n    const width = this.getWidthFromMouseEvent(x);\n    if (width > 0) {\n      this.props.onResize(this.props.column, width);\n    }\n  }\n\n  private getWidthFromMouseEvent(x: number): number {\n    return x - this.cell.current!.getBoundingClientRect().left;\n  }\n\n  getCell() {\n    const { height, column, rowType, allRowsSelected, onAllRowsSelectionChange } = this.props;\n    const renderer = this.props.renderer || SimpleCellRenderer;\n    if (isElement(renderer)) {\n      // if it is a string, it's an HTML element, and column is not a valid property, so only pass height\n      if (typeof renderer.type === 'string') {\n        return React.cloneElement(renderer, { height });\n      }\n      return React.cloneElement(renderer, { column, height });\n    }\n    return React.createElement(renderer, { column, rowType, allRowsSelected, onAllRowsSelectionChange });\n  }\n\n  setScrollLeft(scrollLeft: number) {\n    const node = this.cell.current;\n    if (node) {\n      node.style.transform = `translateX(${scrollLeft}px)`;\n    }\n  }\n\n  removeScroll() {\n    const node = this.cell.current;\n    if (node) {\n      node.style.transform = 'none';\n    }\n  }\n\n  render() {\n    const { column, rowType } = this.props;\n    const colIsFrozen = isFrozen(column);\n\n    const className = classNames('rdg-cell', {\n      'rdg-cell-frozen': colIsFrozen,\n      'rdg-cell-frozen-last': colIsFrozen && column.idx === this.props.lastFrozenColumnIndex\n    }, this.props.className, column.cellClass);\n\n    const cell = (\n      <div\n        ref={this.cell}\n        className={className}\n        style={{\n          width: column.width,\n          left: column.left\n        }}\n        onMouseDown={column.resizable ? this.onMouseDown : undefined}\n        onTouchStart={column.resizable ? this.onTouchStart : undefined}\n      >\n        {this.getCell()}\n        {column.resizable && <div className=\"rdg-header-cell-resizer\" />}\n      </div>\n    );\n\n    const DraggableHeaderCell = this.props.draggableHeaderCell;\n    if (rowType === HeaderRowType.HEADER && column.draggable && DraggableHeaderCell) {\n      return (\n        <DraggableHeaderCell\n          column={column}\n          onHeaderDrop={this.props.onHeaderDrop!}\n        >\n          {cell}\n        </DraggableHeaderCell>\n      );\n    }\n\n    return cell;\n  }\n}\n"]}