{"version":3,"file":"FilterableHeaderCell.js","sourceRoot":"","sources":["../../../../src/common/cells/headerCells/FilterableHeaderCell.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAGxC,MAAM,CAAC,OAAO,UAAU,oBAAoB,CAAI,EAA4C;QAA1C,kBAAM,EAAE,sBAAQ;IAC1D,IAAA,4BAA0C,EAAzC,kBAAU,EAAE,qBAA6B,CAAC;IAEjD,SAAS,YAAY,CAAC,KAA0C;QACtD,IAAA,0BAAK,CAAkB;QAC/B,aAAa,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;SACzC;IACH,CAAC;IAED,OAAO,CACL,6BAAK,SAAS,EAAC,sBAAsB;QACnC,+BACE,GAAG,EAAE,mBAAiB,MAAM,CAAC,GAAgB,EAC7C,SAAS,EAAC,YAAY,EACtB,WAAW,EAAC,QAAQ,EACpB,KAAK,EAAE,UAAU,EACjB,QAAQ,EAAE,YAAY,GACtB,CACE,CACP,CAAC;AACJ,CAAC","sourcesContent":["import React, { useState } from 'react';\nimport { FilterRendererProps } from '../../types';\n\nexport default function FilterableHeaderCell<R>({ column, onChange }: FilterRendererProps<R>) {\n  const [filterTerm, setFilterTerm] = useState('');\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { value } = event.target;\n    setFilterTerm(value);\n    if (onChange) {\n      onChange({ filterTerm: value, column });\n    }\n  }\n\n  return (\n    <div className=\"rdg-filter-container\">\n      <input\n        key={`header-filter-${column.key as keyof R}`}\n        className=\"rdg-filter\"\n        placeholder=\"Search\"\n        value={filterTerm}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n"]}